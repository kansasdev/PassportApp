//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocReader.PassService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalDataVIZ", Namespace="http://schemas.datacontract.org/2004/07/PassportService")]
    [System.SerializableAttribute()]
    public partial class PersonalDataVIZ : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CitizenshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DOBChecksumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocNumberChecksumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpirationChecksumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuuingCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Citizenship {
            get {
                return this.CitizenshipField;
            }
            set {
                if ((object.ReferenceEquals(this.CitizenshipField, value) != true)) {
                    this.CitizenshipField = value;
                    this.RaisePropertyChanged("Citizenship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DOBChecksum {
            get {
                return this.DOBChecksumField;
            }
            set {
                if ((this.DOBChecksumField.Equals(value) != true)) {
                    this.DOBChecksumField = value;
                    this.RaisePropertyChanged("DOBChecksum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfBirthField, value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocNumberChecksum {
            get {
                return this.DocNumberChecksumField;
            }
            set {
                if ((this.DocNumberChecksumField.Equals(value) != true)) {
                    this.DocNumberChecksumField = value;
                    this.RaisePropertyChanged("DocNumberChecksum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpirationChecksum {
            get {
                return this.ExpirationChecksumField;
            }
            set {
                if ((this.ExpirationChecksumField.Equals(value) != true)) {
                    this.ExpirationChecksumField = value;
                    this.RaisePropertyChanged("ExpirationChecksum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpirationDateField, value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuuingCountry {
            get {
                return this.IssuuingCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuuingCountryField, value) != true)) {
                    this.IssuuingCountryField = value;
                    this.RaisePropertyChanged("IssuuingCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyData", Namespace="http://schemas.datacontract.org/2004/07/PassportService")]
    [System.SerializableAttribute()]
    public partial class KeyData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidityDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocNumber {
            get {
                return this.DocNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocNumberField, value) != true)) {
                    this.DocNumberField = value;
                    this.RaisePropertyChanged("DocNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidityDate {
            get {
                return this.ValidityDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidityDateField, value) != true)) {
                    this.ValidityDateField = value;
                    this.RaisePropertyChanged("ValidityDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChipData", Namespace="http://schemas.datacontract.org/2004/07/PassportService")]
    [System.SerializableAttribute()]
    public partial class ChipData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CAStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CitizenshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DG14IntegrityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DG1IntegrityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DG2IntegrityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImagePhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDSTrustedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsJPEG2000Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPACEReadingProcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuingCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MRZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> MessageLOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SODIntegrityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CAStatus {
            get {
                return this.CAStatusField;
            }
            set {
                if ((this.CAStatusField.Equals(value) != true)) {
                    this.CAStatusField = value;
                    this.RaisePropertyChanged("CAStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Citizenship {
            get {
                return this.CitizenshipField;
            }
            set {
                if ((object.ReferenceEquals(this.CitizenshipField, value) != true)) {
                    this.CitizenshipField = value;
                    this.RaisePropertyChanged("Citizenship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DG14Integrity {
            get {
                return this.DG14IntegrityField;
            }
            set {
                if ((this.DG14IntegrityField.Equals(value) != true)) {
                    this.DG14IntegrityField = value;
                    this.RaisePropertyChanged("DG14Integrity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DG1Integrity {
            get {
                return this.DG1IntegrityField;
            }
            set {
                if ((this.DG1IntegrityField.Equals(value) != true)) {
                    this.DG1IntegrityField = value;
                    this.RaisePropertyChanged("DG1Integrity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DG2Integrity {
            get {
                return this.DG2IntegrityField;
            }
            set {
                if ((this.DG2IntegrityField.Equals(value) != true)) {
                    this.DG2IntegrityField = value;
                    this.RaisePropertyChanged("DG2Integrity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpirationDateField, value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImagePhoto {
            get {
                return this.ImagePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePhotoField, value) != true)) {
                    this.ImagePhotoField = value;
                    this.RaisePropertyChanged("ImagePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDSTrusted {
            get {
                return this.IsDSTrustedField;
            }
            set {
                if ((this.IsDSTrustedField.Equals(value) != true)) {
                    this.IsDSTrustedField = value;
                    this.RaisePropertyChanged("IsDSTrusted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsJPEG2000 {
            get {
                return this.IsJPEG2000Field;
            }
            set {
                if ((this.IsJPEG2000Field.Equals(value) != true)) {
                    this.IsJPEG2000Field = value;
                    this.RaisePropertyChanged("IsJPEG2000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPACEReadingProc {
            get {
                return this.IsPACEReadingProcField;
            }
            set {
                if ((this.IsPACEReadingProcField.Equals(value) != true)) {
                    this.IsPACEReadingProcField = value;
                    this.RaisePropertyChanged("IsPACEReadingProc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuingCountry {
            get {
                return this.IssuingCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuingCountryField, value) != true)) {
                    this.IssuingCountryField = value;
                    this.RaisePropertyChanged("IssuingCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MRZ {
            get {
                return this.MRZField;
            }
            set {
                if ((object.ReferenceEquals(this.MRZField, value) != true)) {
                    this.MRZField = value;
                    this.RaisePropertyChanged("MRZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> MessageLOG {
            get {
                return this.MessageLOGField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageLOGField, value) != true)) {
                    this.MessageLOGField = value;
                    this.RaisePropertyChanged("MessageLOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SODIntegrity {
            get {
                return this.SODIntegrityField;
            }
            set {
                if ((this.SODIntegrityField.Equals(value) != true)) {
                    this.SODIntegrityField = value;
                    this.RaisePropertyChanged("SODIntegrity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PassService.IPass", CallbackContract=typeof(DocReader.PassService.IPassCallback))]
    public interface IPass {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/ExtractMrzData", ReplyAction="http://tempuri.org/IPass/ExtractMrzDataResponse")]
        DocReader.PassService.PersonalDataVIZ ExtractMrzData(byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/ExtractMrzData", ReplyAction="http://tempuri.org/IPass/ExtractMrzDataResponse")]
        System.Threading.Tasks.Task<DocReader.PassService.PersonalDataVIZ> ExtractMrzDataAsync(byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/ReadChip", ReplyAction="http://tempuri.org/IPass/ReadChipResponse")]
        void ReadChip(DocReader.PassService.KeyData kd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/ReadChip", ReplyAction="http://tempuri.org/IPass/ReadChipResponse")]
        System.Threading.Tasks.Task ReadChipAsync(DocReader.PassService.KeyData kd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/CheckJavaPrerequisite", ReplyAction="http://tempuri.org/IPass/CheckJavaPrerequisiteResponse")]
        DocReader.PassService.CheckJavaPrerequisiteResponse CheckJavaPrerequisite(DocReader.PassService.CheckJavaPrerequisiteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/CheckJavaPrerequisite", ReplyAction="http://tempuri.org/IPass/CheckJavaPrerequisiteResponse")]
        System.Threading.Tasks.Task<DocReader.PassService.CheckJavaPrerequisiteResponse> CheckJavaPrerequisiteAsync(DocReader.PassService.CheckJavaPrerequisiteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/CheckPythonPrerequisite", ReplyAction="http://tempuri.org/IPass/CheckPythonPrerequisiteResponse")]
        DocReader.PassService.CheckPythonPrerequisiteResponse CheckPythonPrerequisite(DocReader.PassService.CheckPythonPrerequisiteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/CheckPythonPrerequisite", ReplyAction="http://tempuri.org/IPass/CheckPythonPrerequisiteResponse")]
        System.Threading.Tasks.Task<DocReader.PassService.CheckPythonPrerequisiteResponse> CheckPythonPrerequisiteAsync(DocReader.PassService.CheckPythonPrerequisiteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/InvokeMasterlistupdate", ReplyAction="http://tempuri.org/IPass/InvokeMasterlistupdateResponse")]
        DocReader.PassService.InvokeMasterlistupdateResponse InvokeMasterlistupdate(DocReader.PassService.InvokeMasterlistupdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/InvokeMasterlistupdate", ReplyAction="http://tempuri.org/IPass/InvokeMasterlistupdateResponse")]
        System.Threading.Tasks.Task<DocReader.PassService.InvokeMasterlistupdateResponse> InvokeMasterlistupdateAsync(DocReader.PassService.InvokeMasterlistupdateRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPassCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/SessionOpened", ReplyAction="http://tempuri.org/IPass/SessionOpenedResponse")]
        void SessionOpened();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/SessionFinished", ReplyAction="http://tempuri.org/IPass/SessionFinishedResponse")]
        void SessionFinished(string messages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/ErrorRaised", ReplyAction="http://tempuri.org/IPass/ErrorRaisedResponse")]
        void ErrorRaised(string err);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/MrzFromChipTaken", ReplyAction="http://tempuri.org/IPass/MrzFromChipTakenResponse")]
        void MrzFromChipTaken(string mrz);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/ImageFromChipTaken", ReplyAction="http://tempuri.org/IPass/ImageFromChipTakenResponse")]
        void ImageFromChipTaken(byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/DocChecksPerformed", ReplyAction="http://tempuri.org/IPass/DocChecksPerformedResponse")]
        void DocChecksPerformed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/ResultChip", ReplyAction="http://tempuri.org/IPass/ResultChipResponse")]
        void ResultChip(DocReader.PassService.ChipData cd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/CSCADownloaded", ReplyAction="http://tempuri.org/IPass/CSCADownloadedResponse")]
        void CSCADownloaded(string messages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/CSCAUnzipped", ReplyAction="http://tempuri.org/IPass/CSCAUnzippedResponse")]
        void CSCAUnzipped(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPass/CSCAParsed", ReplyAction="http://tempuri.org/IPass/CSCAParsedResponse")]
        void CSCAParsed(string message);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckJavaPrerequisite", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckJavaPrerequisiteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string message;
        
        public CheckJavaPrerequisiteRequest() {
        }
        
        public CheckJavaPrerequisiteRequest(string message) {
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckJavaPrerequisiteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckJavaPrerequisiteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckJavaPrerequisiteResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public CheckJavaPrerequisiteResponse() {
        }
        
        public CheckJavaPrerequisiteResponse(bool CheckJavaPrerequisiteResult, string message) {
            this.CheckJavaPrerequisiteResult = CheckJavaPrerequisiteResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPythonPrerequisite", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckPythonPrerequisiteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string message;
        
        public CheckPythonPrerequisiteRequest() {
        }
        
        public CheckPythonPrerequisiteRequest(string message) {
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPythonPrerequisiteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckPythonPrerequisiteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckPythonPrerequisiteResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public CheckPythonPrerequisiteResponse() {
        }
        
        public CheckPythonPrerequisiteResponse(bool CheckPythonPrerequisiteResult, string message) {
            this.CheckPythonPrerequisiteResult = CheckPythonPrerequisiteResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InvokeMasterlistupdate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InvokeMasterlistupdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string message;
        
        public InvokeMasterlistupdateRequest() {
        }
        
        public InvokeMasterlistupdateRequest(string message) {
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InvokeMasterlistupdateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InvokeMasterlistupdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool InvokeMasterlistupdateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public InvokeMasterlistupdateResponse() {
        }
        
        public InvokeMasterlistupdateResponse(bool InvokeMasterlistupdateResult, string message) {
            this.InvokeMasterlistupdateResult = InvokeMasterlistupdateResult;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPassChannel : DocReader.PassService.IPass, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PassClient : System.ServiceModel.DuplexClientBase<DocReader.PassService.IPass>, DocReader.PassService.IPass {
        
        public PassClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PassClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PassClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PassClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PassClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public DocReader.PassService.PersonalDataVIZ ExtractMrzData(byte[] image) {
            return base.Channel.ExtractMrzData(image);
        }
        
        public System.Threading.Tasks.Task<DocReader.PassService.PersonalDataVIZ> ExtractMrzDataAsync(byte[] image) {
            return base.Channel.ExtractMrzDataAsync(image);
        }
        
        public void ReadChip(DocReader.PassService.KeyData kd) {
            base.Channel.ReadChip(kd);
        }
        
        public System.Threading.Tasks.Task ReadChipAsync(DocReader.PassService.KeyData kd) {
            return base.Channel.ReadChipAsync(kd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DocReader.PassService.CheckJavaPrerequisiteResponse DocReader.PassService.IPass.CheckJavaPrerequisite(DocReader.PassService.CheckJavaPrerequisiteRequest request) {
            return base.Channel.CheckJavaPrerequisite(request);
        }
        
        public bool CheckJavaPrerequisite(ref string message) {
            DocReader.PassService.CheckJavaPrerequisiteRequest inValue = new DocReader.PassService.CheckJavaPrerequisiteRequest();
            inValue.message = message;
            DocReader.PassService.CheckJavaPrerequisiteResponse retVal = ((DocReader.PassService.IPass)(this)).CheckJavaPrerequisite(inValue);
            message = retVal.message;
            return retVal.CheckJavaPrerequisiteResult;
        }
        
        public System.Threading.Tasks.Task<DocReader.PassService.CheckJavaPrerequisiteResponse> CheckJavaPrerequisiteAsync(DocReader.PassService.CheckJavaPrerequisiteRequest request) {
            return base.Channel.CheckJavaPrerequisiteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DocReader.PassService.CheckPythonPrerequisiteResponse DocReader.PassService.IPass.CheckPythonPrerequisite(DocReader.PassService.CheckPythonPrerequisiteRequest request) {
            return base.Channel.CheckPythonPrerequisite(request);
        }
        
        public bool CheckPythonPrerequisite(ref string message) {
            DocReader.PassService.CheckPythonPrerequisiteRequest inValue = new DocReader.PassService.CheckPythonPrerequisiteRequest();
            inValue.message = message;
            DocReader.PassService.CheckPythonPrerequisiteResponse retVal = ((DocReader.PassService.IPass)(this)).CheckPythonPrerequisite(inValue);
            message = retVal.message;
            return retVal.CheckPythonPrerequisiteResult;
        }
        
        public System.Threading.Tasks.Task<DocReader.PassService.CheckPythonPrerequisiteResponse> CheckPythonPrerequisiteAsync(DocReader.PassService.CheckPythonPrerequisiteRequest request) {
            return base.Channel.CheckPythonPrerequisiteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DocReader.PassService.InvokeMasterlistupdateResponse DocReader.PassService.IPass.InvokeMasterlistupdate(DocReader.PassService.InvokeMasterlistupdateRequest request) {
            return base.Channel.InvokeMasterlistupdate(request);
        }
        
        public bool InvokeMasterlistupdate(ref string message) {
            DocReader.PassService.InvokeMasterlistupdateRequest inValue = new DocReader.PassService.InvokeMasterlistupdateRequest();
            inValue.message = message;
            DocReader.PassService.InvokeMasterlistupdateResponse retVal = ((DocReader.PassService.IPass)(this)).InvokeMasterlistupdate(inValue);
            message = retVal.message;
            return retVal.InvokeMasterlistupdateResult;
        }
        
        public System.Threading.Tasks.Task<DocReader.PassService.InvokeMasterlistupdateResponse> InvokeMasterlistupdateAsync(DocReader.PassService.InvokeMasterlistupdateRequest request) {
            return base.Channel.InvokeMasterlistupdateAsync(request);
        }
    }
}
